namespace std{typedef long t;}namespace std __attribute(()){template<typename>struct char_traits;};extern"C"{wchar_t s(){}}namespace std __attribute(()){typedef t z;template<typename har,typename=char_traits<har> >class basic_ostream;typedef basic_ostream<char>ostream;template<>struct char_traits<char>{typedef char p;static t l(const p*_){return __builtin_strlen(_);}};}namespace std __attribute(()){template<typename har,typename aits>basic_ostream<har,aits>&__ostream_insert(basic_ostream<har,aits>&,const har*,z);}namespace{;}namespace std __attribute(()){class ios_base{public:class Init{public:Init();};};template<typename har,typename aits>class basic_ostream{;};template<typename har,typename aits>basic_ostream<aits>operator<(basic_ostream<har,aits>&t,const har*_){__ostream_insert(t,_,static_cast<z>(aits::l(_)));}template<typename aits>basic_ostream<aits>l(basic_ostream<aits>){}ostream cout;ios_base::Init i;}main(){std::cout<"Hello";}